(undo-tree-save-format-version . 1)
"3264d0f0e8974e1495114e0026c26357effaa6dd"
[nil nil nil nil (25142 16505 47579 258000) 0 nil]
([nil nil ((82 . 83) (#("\"" 0 1 (fontified nil face font-lock-string-face syntax-table (15))) . 82) (undo-tree-id66 . -1) (undo-tree-id67 . -1) (73 . 82) (57 . 73) (56 . 58) (#("\"" 0 1 (fontified nil syntax-table (15))) . -56) (undo-tree-id68 . -1) (undo-tree-id69 . -1) (52 . 57) (51 . 52) (50 . 51) (49 . 50) (#("\"" 0 1 (fontified nil face font-lock-string-face syntax-table (15))) . 49) (undo-tree-id70 . -1) (undo-tree-id71 . -1) (undo-tree-id72 . -1) (undo-tree-id73 . -1) (undo-tree-id74 . -1) (undo-tree-id75 . -1) (undo-tree-id76 . -1) (48 . 49) (#(" " 0 1 (fontified nil)) . -48) (undo-tree-id77 . -1) (undo-tree-id78 . -1) (undo-tree-id79 . -1) (undo-tree-id80 . -1) (undo-tree-id81 . -1) (undo-tree-id82 . -1) (48 . 49) (#("\"" 0 1 (fontified nil face font-lock-string-face syntax-table (15))) . -48) (undo-tree-id83 . -1) (46 . 49) (#("t" 0 1 (fontified t face font-lock-string-face)) . -46) (undo-tree-id84 . -1) (undo-tree-id85 . -1) 47 (32 . 47) (31 . 33) (#("\"" 0 1 (fontified nil syntax-table (15))) . -31) (26 . 32) (25 . 26) (24 . 25) (#("\"" 0 1 (fontified nil face font-lock-string-face syntax-table (15))) . 24) (undo-tree-id86 . -1) (22 . 24) (7 . 22) (6 . 8) (#("\"" 0 1 (fontified nil syntax-table (15))) . -6) (1 . 7) (t . -1)) nil (25142 16505 47573 417000) 0 nil])
([nil nil ((1 . 3)) nil (25142 16505 47531 37000) 0 nil])
([nil nil ((32 . 33) (#("\"" 0 1 (fontified nil face font-lock-string-face syntax-table (15))) . 32) (undo-tree-id49 . -1) (undo-tree-id50 . -1) (undo-tree-id51 . -1) (undo-tree-id52 . -1) (undo-tree-id53 . -1) (undo-tree-id54 . -1) (31 . 32) (#(" " 0 1 (fontified nil)) . -31) (undo-tree-id55 . -1) (undo-tree-id56 . -1) (undo-tree-id57 . -1) (undo-tree-id58 . -1) (undo-tree-id59 . -1) (undo-tree-id60 . -1) (31 . 32) (#("\"" 0 1 (fontified nil face font-lock-string-face syntax-table (15))) . -31) (undo-tree-id61 . -1) (23 . 32) (#("o" 0 1 (fontified t face font-lock-string-face)) . -23) (undo-tree-id62 . -1) (undo-tree-id63 . -1) 24 (9 . 24) (8 . 10) (#("\"" 0 1 (fontified nil syntax-table (15))) . -8) (undo-tree-id64 . -1) (undo-tree-id65 . -1) (3 . 9) (1 . 3)) nil (25142 16505 47527 551000) 0 nil])
([nil nil ((#("  " 0 2 (fontified nil)) . 174) (174 . 176) (173 . 175) (172 . 174) (#("{" 0 1 (fontified nil)) . -172) (undo-tree-id41 . -1) (undo-tree-id42 . -1) (161 . 173) (#("g" 0 1 (fontified t face font-lock-type-face)) . -161) (undo-tree-id43 . -1) (undo-tree-id44 . -1) (undo-tree-id45 . -1) 162 (158 . 162) (146 . 158) (#("v" 0 1 (fontified t face font-lock-type-face)) . -146) (undo-tree-id46 . -1) (undo-tree-id47 . -1) (undo-tree-id48 . -1) 147 (143 . 147) (130 . 143) (119 . 130) (117 . 119)) nil (25142 16505 47501 71000) 0 nil])
([nil nil ((nil rear-nonsticky nil 182 . 183) (nil fontified nil 174 . 183) (174 . 183)) nil (25142 16505 47360 979000) 0 nil])
([nil nil ((174 . 176)) nil (25142 16505 47359 436000) 0 nil])
([nil nil ((195 . 197) (#("(" 0 1 (fontified nil face font-lock-keyword-face)) . -195) (undo-tree-id39 . -1) (undo-tree-id40 . -1) (187 . 196) (#(")" 0 1 (fontified nil face (rainbow-delimiters-depth-2-face))) . 187) (186 . 187) (185 . 187) (#("(" 0 1 (fontified nil)) . -185) (185 . 186)) nil (25142 16505 47357 372000) 0 nil])
([nil nil ((nil rear-nonsticky nil 206 . 207) (nil fontified nil 197 . 207) (197 . 207) 196) nil (25142 16505 47352 72000) 0 nil])
([nil nil ((#("LoginState" 0 9 (fontified nil face font-lock-type-face) 9 10 (fontified nil rear-nonsticky nil face font-lock-type-face)) . 197) (undo-tree-id36 . -9) (undo-tree-id37 . -9) (undo-tree-id38 . -9) (nil rear-nonsticky t 206 . 207)) nil (25142 16505 47349 687000) 0 nil])
([nil nil ((nil rear-nonsticky nil 205 . 206) (nil fontified nil 196 . 206) (196 . 206) 195) nil (25142 16505 47342 795000) 0 nil])
([nil nil ((213 . 215) (#("    " 0 4 (fontified nil)) . 212) (212 . 216) (#("  " 0 2 (fontified nil)) . 212) (undo-tree-id25 . -2) (undo-tree-id26 . -1) (undo-tree-id27 . -2) (undo-tree-id28 . -2) (211 . 215) (210 . 212) (#("{" 0 1 (fontified nil)) . -210) (undo-tree-id29 . -1) (undo-tree-id30 . -1) (209 . 211) (#(")" 0 1 (fontified nil face (rainbow-delimiters-depth-2-face))) . 209) (undo-tree-id31 . 1) (undo-tree-id32 . -1) (208 . 209) (#(" " 0 1 (fontified nil)) . -208) (208 . 209) (#(")" 0 1 (fontified nil face (rainbow-delimiters-depth-3-face))) . -208) (208 . 209) (#(")" 0 1 (fontified nil face (rainbow-delimiters-depth-3-face))) . 208) (undo-tree-id33 . -1) (207 . 208) (206 . 208) (#("(" 0 1 (fontified nil)) . -206) (undo-tree-id34 . -1) (undo-tree-id35 . -1) (206 . 207)) nil (25142 16505 47337 685000) 0 nil])
([nil nil ((#("  " 0 2 (fontified t)) . -218) (undo-tree-id18 . -2) (undo-tree-id19 . -1) (undo-tree-id20 . -2) (undo-tree-id21 . -2) 220 (218 . 220) (#("  " 0 2 (fontified nil)) . 217) (undo-tree-id22 . -2) (undo-tree-id23 . -1) (undo-tree-id24 . -2) (216 . 220)) nil (25142 16505 47319 851000) 0 nil])
([nil nil ((#("

" 0 1 (fontified t) 1 2 (fontified t)) . 217) (undo-tree-id0 . 1) (undo-tree-id1 . -1) (undo-tree-id2 . -1) (undo-tree-id3 . -2) (undo-tree-id4 . 2) (undo-tree-id5 . -1) (undo-tree-id6 . -1) (undo-tree-id7 . -2) (undo-tree-id8 . -1) (undo-tree-id9 . -1) (undo-tree-id10 . -2) (undo-tree-id11 . -1) (undo-tree-id12 . -1) (undo-tree-id13 . -1) (undo-tree-id14 . -1) (undo-tree-id15 . -1) (undo-tree-id16 . -1) (undo-tree-id17 . -1) 218) nil (25142 16505 47309 91000) 0 nil])
([nil nil ((218 . 219)) nil (25142 16505 47264 848000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -211) (undo-tree-id87 . -1) (undo-tree-id88 . -1) (undo-tree-id89 . -1) (undo-tree-id90 . -1) (undo-tree-id91 . -1) (undo-tree-id92 . -1) (undo-tree-id93 . -1) (undo-tree-id94 . -1) (undo-tree-id95 . -1) 212 (#("
" 0 1 (fontified t)) . -212) (undo-tree-id96 . -1) (undo-tree-id97 . -1) (undo-tree-id98 . -1) (undo-tree-id99 . -1) (undo-tree-id100 . -1) (undo-tree-id101 . -1) (undo-tree-id102 . -1) (undo-tree-id103 . -1) (undo-tree-id104 . -1) 213 (#("  " 0 2 (fontified t)) . -213) (undo-tree-id105 . -1) (undo-tree-id106 . -2) (undo-tree-id107 . -2) (undo-tree-id108 . -2) (undo-tree-id109 . -2) 215 (t 25142 16505 84223 359000)) nil (25142 16523 808331 381000) 0 nil])
([nil nil ((nil rear-nonsticky nil 34 . 35) (#("
" 0 1 (fontified nil)) . -96) (34 . 97) (t 25142 16523 838224 660000)) nil (25142 17066 432726 800000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t rear-nonsticky t)) . 34) (undo-tree-id110 . -1) (undo-tree-id111 . -1) (undo-tree-id112 . -1) (undo-tree-id113 . -1) (undo-tree-id114 . -1)) nil (25142 17066 432721 129000) 0 nil])
([nil current ((158 . 162) (#("s" 0 1 (fontified t face font-lock-string-face)) . -158) (undo-tree-id115 . -1) (undo-tree-id116 . -1) (undo-tree-id117 . -1) (undo-tree-id118 . -1) (undo-tree-id119 . -1) (undo-tree-id120 . -1) (undo-tree-id121 . -1) (undo-tree-id122 . -1) (undo-tree-id123 . -1) (undo-tree-id124 . -1) (#("t" 0 1 (fontified t face font-lock-string-face)) . -159) (undo-tree-id125 . -1) (undo-tree-id126 . -1) (undo-tree-id127 . -1) (undo-tree-id128 . -1) (undo-tree-id129 . -1) (undo-tree-id130 . -1) (undo-tree-id131 . -1) (undo-tree-id132 . -1) (undo-tree-id133 . -1) (undo-tree-id134 . -1) (#("a" 0 1 (fontified t face font-lock-string-face)) . -160) (undo-tree-id135 . -1) (undo-tree-id136 . -1) (undo-tree-id137 . -1) (undo-tree-id138 . -1) (undo-tree-id139 . -1) (undo-tree-id140 . -1) (undo-tree-id141 . -1) (undo-tree-id142 . -1) (undo-tree-id143 . -1) (undo-tree-id144 . -1) (#("t" 0 1 (fontified t face font-lock-string-face)) . -161) (undo-tree-id145 . -1) (undo-tree-id146 . -1) (undo-tree-id147 . -1) (undo-tree-id148 . -1) (undo-tree-id149 . -1) (undo-tree-id150 . -1) (undo-tree-id151 . -1) (undo-tree-id152 . -1) (undo-tree-id153 . -1) (undo-tree-id154 . -1) (#("e" 0 1 (fontified t face font-lock-string-face)) . -162) (undo-tree-id155 . -1) (undo-tree-id156 . -1) (undo-tree-id157 . -1) (undo-tree-id158 . -1) 163 (t 25142 17066 452262 292000)) nil (25142 17084 862734 761000) 0 nil])
nil
